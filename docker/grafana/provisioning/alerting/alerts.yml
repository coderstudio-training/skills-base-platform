apiVersion: 1
groups:
  - orgId: 1
    name: http_error_metrics
    folder: service_metrics
    interval: 10s
    rules:
      # 400 Bad Request Rate Alert
      - uid: bad_request_alert
        title: High Bad Request (400) Error Rate
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(http_requests_total{status="400"}[1m])) by (service)
                /
                sum(rate(http_requests_total[1m])) by (service) * 100

              instant: true
              intervalMs: 1000
              legendFormat: '{{service}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [5] # Alert if error rate exceeds 5%
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} has a high rate of 400 Bad Request errors (>5%)'
          summary: High Bad Request Rate
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # 401 Unauthorized Rate Alert
      - uid: unauthorized_alert
        title: High Unauthorized (401) Error Rate
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(http_requests_total{status="401"}[1m])) by (service)
                /
                sum(rate(http_requests_total[1m])) by (service) * 100

              instant: true
              intervalMs: 1000
              legendFormat: '{{service}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [10] # Alert if error rate exceeds 10%
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} has a high rate of 401 Unauthorized errors (>10%)'
          summary: High Unauthorized Rate
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # 404 Not Found Rate Alert
      - uid: not_found_alert
        title: High Not Found (404) Error Rate
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(http_requests_total{status="404"}[1m])) by (service)
                /
                sum(rate(http_requests_total[1m])) by (service) * 100

              instant: true
              intervalMs: 1000
              legendFormat: '{{service}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [15] # Alert if error rate exceeds 15%
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} has a high rate of 404 Not Found errors (>15%)'
          summary: High Not Found Rate
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # 500 Internal Server Error Rate Alert
      - uid: server_error_alert
        title: High Server Error (500) Rate
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(http_requests_total{status="500"}[1m])) by (service)
                /
                sum(rate(http_requests_total[1m])) by (service) * 100

              instant: true
              intervalMs: 1000
              legendFormat: '{{service}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [1] # Alert if error rate exceeds 1%
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} has a high rate of 500 Internal Server errors (>1%)'
          summary: High Server Error Rate
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # HTTP Latency Alerts
      - uid: http_latency_alert
        title: High HTTP Request Latency
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                histogram_quantile(0.95, sum by (le, service, path) (rate(http_request_duration_seconds_bucket[1m]))) > 1
              instant: true
              intervalMs: 1000
              legendFormat: '{{service}} - {{path}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [1] # Alert if 95th percentile latency > 1s
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} endpoint {{ $labels.path }} has high latency (95th percentile > 1s)'
          summary: High Request Latency
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # CPU Usage Alert
      - uid: high_cpu_usage
        title: High CPU Usage
        condition: B
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(cpu_usage_seconds_total[1m])) by (service) * 100
              instant: true
              intervalMs: 1000
              legendFormat: '{{service}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [80] # Alert if CPU usage > 80%
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} CPU usage is above 80%'
          summary: High CPU Usage
        isPaused: false

      # Memory Usage Alert
      - uid: high_memory_usage
        title: High Memory Usage
        condition: B
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                memory_usage_bytes{type="heapUsed"} / memory_usage_bytes{type="heapTotal"} * 100

              instant: true
              intervalMs: 1000
              legendFormat: '{{service}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [85] # Alert if heap usage > 85%
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} memory usage is above 85% of heap'
          summary: High Memory Usage
        isPaused: false

      # Event Loop Lag Alert
      - uid: event_loop_lag
        title: High Event Loop Lag
        condition: B
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                histogram_quantile(0.95, sum by (le) (rate(event_loop_lag_seconds_bucket[1m])))

              instant: true
              intervalMs: 1000
              legendFormat: '{{service}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [0.1] # Alert if event loop lag > 100ms
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} event loop lag is high (>100ms)'
          summary: High Event Loop Lag
        isPaused: false

      # Garbage Collection Duration Alert
      - uid: gc_duration
        title: High Garbage Collection Time
        condition: B
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate({nodejs_gc_duration_seconds_sum"}[1m])) by (service) /
                sum(rate({cnodejs_gc_duration_seconds_count"}[1m])) by (service)
              instant: true
              intervalMs: 1000
              legendFormat: '{{service}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [0.1] # Alert if average GC duration > 100ms
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} is spending too much time in garbage collection'
          summary: High GC Duration
        isPaused: false

      # 501 Not Implemented Alert
      - uid: not_implemented_alert
        title: Not Implemented (501) Errors Detected
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(http_requests_total{status="501"}[1m])) by (service, path)

              instant: true
              intervalMs: 1000
              legendFormat: '{{service}} - {{path}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [0.1] # Alert if more than 0.1 errors per second (rare error)
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s
        annotations:
          description: 'Service {{ $labels.service }} endpoint {{ $labels.path }} is returning 501 Not Implemented errors. This indicates a requested feature is not implemented or misconfigured.'
          summary: Not Implemented Errors Detected
          runbook_url: 'https://your-runbook-url/501-errors'
        labels:
          severity: warning
          category: implementation
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # 502 Bad Gateway Alert
      - uid: bad_gateway_alert
        title: Bad Gateway (502) Errors Detected
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(http_requests_total{status="502"}[1m])) by (service)
                /
                sum(rate(http_requests_total[1m])) by (service) * 100

              instant: true
              intervalMs: 1000
              legendFormat: '{{service}} - {{path}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [5] # Alert if more than 5% of requests are 502s
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s # Shorter window as this is more critical
        annotations:
          description: 'Service {{ $labels.service }} endpoint {{ $labels.path }} is experiencing Bad Gateway errors (>5%). This might indicate issues with upstream services or proxy configuration.'
          summary: Bad Gateway Errors Detected
          runbook_url: 'https://your-runbook-url/502-errors'
        labels:
          severity: critical
          category: connectivity
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # 503 Service Unavailable Alert
      - uid: service_unavailable_alert
        title: Service Unavailable (503) Errors Detected
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(http_requests_total{status="503"}[1m])) by (service)
                /
                sum(rate(http_requests_total[1m])) by (service) * 100
              instant: true
              intervalMs: 1000
              legendFormat: '{{service}} - {{path}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [3] # Alert if more than 3% of requests are 503s
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 10s # Very short window as this is critical
        annotations:
          description: 'Service {{ $labels.service }} endpoint {{ $labels.path }} is returning Service Unavailable errors (>3%). This indicates the service is overloaded or temporarily unavailable.'
          summary: Service Unavailable Errors Detected
          runbook_url: 'https://your-runbook-url/503-errors'
        labels:
          severity: critical
          category: availability
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      - uid: rate_limit_breaches_alert
        title: High Rate of Rate Limit Breaches
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(security_rate_limit_breaches_total[1m])) by (path, ip_address)
              instant: true
              intervalMs: 1000
              legendFormat: '{{ip_address}} - {{path}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [10] # Alert if more than 10 breaches per minute
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 1m
        annotations:
          description: 'High rate of rate limit breaches detected from IP {{ $labels.ip_address }} on path {{ $labels.path }}'
          summary: Rate Limit Breaches Detected
          runbook_url: 'https://your-runbook-url/rate-limit-breaches'
        labels:
          severity: warning
          category: security
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # Unauthorized Access Alert
      - uid: unauthorized_access_alert
        title: High Rate of Unauthorized Access Attempts
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(security_unauthorized_access_total[5m])) by (type, ip_address)
              instant: true
              intervalMs: 1000
              legendFormat: '{{ip_address}} - {{type}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [5] # Alert if more than 5 unauthorized attempts per 5 minutes
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 1m
        annotations:
          description: 'Multiple unauthorized access attempts detected from IP {{ $labels.ip_address }} (Type: {{ $labels.type }})'
          summary: Unauthorized Access Attempts
          runbook_url: 'https://your-runbook-url/unauthorized-access'
        labels:
          severity: critical
          category: security
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # Suspicious Requests Alert
      - uid: suspicious_requests_alert
        title: High Rate of Suspicious Requests
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(rate(security_suspicious_requests_total[5m])) by (type, ip_address)
              instant: true
              intervalMs: 1000
              legendFormat: '{{ip_address}} - {{type}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [3] # Alert if more than 3 suspicious requests per 5 minutes
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 1m
        annotations:
          description: 'Multiple suspicious requests detected from IP {{ $labels.ip_address }} (Type: {{ $labels.type }})'
          summary: Suspicious Requests Detected
          runbook_url: 'https://your-runbook-url/suspicious-requests'
        labels:
          severity: critical
          category: security
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service

      # Blocked IPs Alert
      - uid: blocked_ips_alert
        title: High Number of Blocked IPs
        condition: C
        data:
          - refId: A
            relativeTimeRange:
              from: 300
              to: 0
            datasourceUid: PBFA97CFB590B2093
            model:
              editorMode: code
              expr: |
                sum(security_blocked_ips_current) by (reason)
              instant: true
              intervalMs: 1000
              legendFormat: '{{reason}}'
              maxDataPoints: 43200
              range: false
          - refId: B
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: []
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [B]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: A
              reducer: last
              type: reduce
          - refId: C
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [50] # Alert if more than 50 IPs are blocked
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [C]
                  reducer:
                    params: []
                    type: last
                  type: query
              expression: B
              type: threshold
        noDataState: NoData
        execErrState: Error
        for: 5m
        annotations:
          description: 'High number of blocked IPs detected (Reason: {{ $labels.reason }})'
          summary: High Number of Blocked IPs
          runbook_url: 'https://your-runbook-url/blocked-ips'
        labels:
          severity: warning
          category: security
        isPaused: false
        notification_settings:
          receiver: skills_base_email_service
