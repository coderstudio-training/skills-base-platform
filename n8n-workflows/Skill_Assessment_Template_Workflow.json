{
  "name": "Skill Assessment Template Workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [-140, -720],
      "id": "26709d68-d40f-4372-9235-0a4ec9ecf400",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [-2020, -653],
      "id": "9f8adb97-e876-43fa-ae32-cda79d8199bf",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "feE9JVAcVI0VzCDr",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Extract the access token from the login response\nconst accessToken = $node['Login'].json.access_token;\n\nif (!accessToken) {\n  throw new Error('Failed to obtain access token');\n}\n\n// Process the data from Google Sheets\nconst sheetData = $node['Google Sheets'].json.values;\nconst headers = sheetData[0];\nconst data = sheetData.slice(1);\n\nconst processedData = data.map(row => {\n  const item = {};\n  headers.forEach((header, index) => {\n    item[header] = row[index];\n  });\n  return {\n    employeeId: item.EmployeeID,\n    name: item.Name,\n    department: item.Department,\n    skills: {\n      JavaScript: parseInt(item.JavaScript) || 0,\n      Python: parseInt(item.Python) || 0\n      // Add more skills as needed\n    }\n  };\n});\n\nconst validItems = [];\nconst errors = [];\n\nprocessedData.forEach((item, index) => {\n  if (!item.employeeId) {\n    errors.push({ index, error: 'Missing EmployeeID' });\n  } else if (Object.values(item.skills).some(level => level < 0 || level > 5)) {\n    errors.push({ index, error: 'Skill levels must be between 0 and 5' });\n  } else {\n    validItems.push(item);\n  }\n});\n\n// Return the results along with the access token\nreturn {\n  json: {\n    accessToken,\n    validItems,\n    errors\n  }\n};"
      },
      "name": "Process and Validate Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [-1880, -653],
      "id": "35b3e59b-1f01-463e-aeb3-2fc44b470bb4",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/skills-matrix/bulk-update",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "data",
              "value": "={{ $json.validItems }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Skills Matrix API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-1680, -653],
      "id": "148de34e-64ca-4ed1-9906-6887e567e07b",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.statusCode }}"
            }
          ]
        }
      },
      "name": "Check API Response",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [-1480, -653],
      "id": "23b869ee-551c-4fcf-bf2a-dd67df4f7523",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/notifications/success",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "=Skills Matrix update completed successfully. Updated {{ $json.body.updatedCount }} records."
            }
          ]
        },
        "options": {}
      },
      "name": "Send Success Notification API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-1280, -753],
      "id": "52aacf51-c93f-40f1-821a-09f125aa40b6",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/notifications/error",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "=Error occurred during Skills Matrix update: {{ $json.body }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Send Error Notification API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-1280, -553],
      "id": "e00eb5d7-8192-4b74-89ac-7f60e6a38219",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.errors.length > 0 }}"
            }
          ]
        }
      },
      "name": "Check for Validation Errors",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [-1620, -293],
      "id": "479f3835-58c9-460c-9b4a-73f29d3f08e0",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/error-logs/create",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "errors",
              "value": "={{ $json.errors }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Log Errors to API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-1280, -333],
      "id": "dfb0bdfd-5dae-4f10-8e44-cbe58ebd480e",
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "=1NKLe-Csob8igAU8oxMnd_mYGiMFKisWtEIBjb8H2ekg",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1NKLe-Csob8igAU8oxMnd_mYGiMFKisWtEIBjb8H2ekg/edit#gid=0"
        },
        "options": {}
      },
      "id": "9f763b45-3987-4540-9c52-27139ad521a0",
      "name": "Read Self Assessments",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [680, -760],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "=1dMmzdwLNTV6-9729KpNfXcn3D6sHlT4ZcxtcXgzb9j0",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dMmzdwLNTV6-9729KpNfXcn3D6sHlT4ZcxtcXgzb9j0/edit#gid=0"
        },
        "options": {}
      },
      "id": "2e297857-6a75-4f8e-bb3a-b7dce2c4eee3",
      "name": "Read Manager Assessments",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [640, -120],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "56abc4cf-8ec3-410f-b0f6-32b0a82311dd",
              "leftValue": "={{ $json.errors.isEmpty() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "f68f62bf-d8a6-4708-93da-8bfbaf6567d6",
      "name": "Check for Validation Errors1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1240, -760]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "56abc4cf-8ec3-410f-b0f6-32b0a82311dd",
              "leftValue": "={{ $json.errors.isEmpty() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "3a4f8add-2aa6-49dc-b16f-3698816abdd4",
      "name": "Check for Validation Errors2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1220, -120]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/error-logs/create",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "errors",
              "value": "={{ $json.errors }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Log Errors to API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1260, -460],
      "id": "3ba792c2-6562-4d1e-9df2-2253531d43b6",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://172.22.156.50:3002/api/skills-matrix/bulk-update-assessments",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "assessmentType",
              "value": "={{ $json.assessmentType }}"
            },
            {
              "name": "data",
              "value": "={{ $json.validItems }}"
            },
            {
              "name": "prefix",
              "value": "={{ $node['Process and Validate Manager Assessment Data'].json.prefixBU }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Skills Matrix API2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1480, -140],
      "id": "8b0a0297-5d62-45b8-9b56-11cdd39f9638"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://172.22.156.50:3002/api/skills-matrix/bulk-update-assessments",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "assessmentType",
              "value": "={{ $json.assessmentType }}"
            },
            {
              "name": "data",
              "value": "={{ $node['Process and Validate Self Assessment Data'].json.validItems }}"
            },
            {
              "name": "prefix",
              "value": "={{ $node['Process and Validate Self Assessment Data'].json.prefixBU }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Skills Matrix API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1500, -900],
      "id": "24ab3f9d-156b-4fc4-a48b-17a62ba3a1c7"
    },
    {
      "parameters": {
        "content": "## Reference",
        "height": 756.3366169586252,
        "width": 1037.2586577128786,
        "color": 3
      },
      "id": "33c4815d-a6f5-44a0-a5e6-c863818965f7",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-2080, -820]
    },
    {
      "parameters": {
        "url": "=http://172.22.156.50:3002/api/skills-matrix/{{ $node['Process and Validate Self Assessment Data'].json.assessmentType }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node['Login'].json.access_token }}"
            }
          ]
        },
        "options": {}
      },
      "name": "GET Self Skills Data API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-2020, -1500],
      "id": "1926b717-8183-4211-a49f-42ce7dcfa032"
    },
    {
      "parameters": {
        "url": "=http://172.22.156.50:3002/api/skills-matrix/{{ $node['Process and Validate Manager Assessment Data'].json.assessmentType }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node['Login'].json.access_token }}"
            }
          ]
        },
        "options": {}
      },
      "name": "GET Self Skills Data API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [-2020, -1140],
      "id": "4aee2d24-3a26-484a-981e-51693ab97f0d"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/notifications/success",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "=Skills Matrix update completed successfully. Updated {{ $json.body.updatedCount }} records."
            }
          ]
        },
        "options": {}
      },
      "name": "Send Success Notification API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2080, -1080],
      "id": "7872b583-9373-4117-980d-a479cf348626",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.statusCode }}"
            }
          ]
        }
      },
      "name": "Check API Response1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1720, -140],
      "id": "6f495c65-7889-422d-a425-fe5bdc26bc90",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.statusCode }}"
            }
          ]
        }
      },
      "name": "Check API Response2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1740, -900],
      "id": "9f82f61e-a471-417d-950d-f448fd339574",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/notifications/success",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "=Skills Matrix update completed successfully. Updated {{ $json.body.updatedCount }} records."
            }
          ]
        },
        "options": {}
      },
      "name": "Send Success Notification API2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2040, -300],
      "id": "1c835b39-daf5-48f0-808d-50756579ffa2",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/notifications/error",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "=Error occurred during Skills Matrix update: {{ $json.body }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Send Error Notification API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2080, -740],
      "id": "2722b24b-d6e0-4c84-ad9b-284838325f6f",
      "disabled": true
    },
    {
      "parameters": {},
      "id": "11d0aeb4-28a2-4300-8424-5a027c438562",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [-1900, -1300]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "id": "812a2dce-c8b1-48bb-ba4d-be54f92fd559",
      "name": "Transform Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1680, -1300],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "id": "a8ad5259-bf65-43b4-8acf-25014adb4a2c",
      "name": "Compute Average Per Employee",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1460, -1300],
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "options": {}
      },
      "id": "275f358f-afb3-45f0-a787-36996baee21c",
      "name": "Update Average Skills API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-1240, -1300],
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "={{ $node['Search Folder'].json.id }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1856184611,
          "mode": "list",
          "cachedResultName": "RequiredSkills",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1as7YZtwV0K7TlaMjz2Q3VkAKVqOeRiIKTAZg-gYJ_YU/edit#gid=1856184611"
        },
        "options": {}
      },
      "id": "69528caa-e8df-4b47-a31c-0fb51fe673cf",
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [660, -1400],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "feE9JVAcVI0VzCDr",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "56abc4cf-8ec3-410f-b0f6-32b0a82311dd",
              "leftValue": "={{ $json.errors.isEmpty() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "8b5af153-9c8b-46e9-a1fc-e7febca8939e",
      "name": "Check for Validation Errors3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1240, -1400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.143.2:3002/api/skills-matrix/bulk-update-assessments",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "assessmentType",
              "value": "={{ $json.assessmentType }}"
            },
            {
              "name": "data",
              "value": "={{ $json.validItems }}"
            },
            {
              "name": "prefix",
              "value": "={{ $node['Process and Validate Required Skills Data'].json.prefixBU }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "name": "Update Skills Matrix API3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1520, -1560],
      "id": "0a3fca17-61d8-4550-b734-54f3ac319a40"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ true }}",
              "value2": "={{ true }}"
            }
          ]
        }
      },
      "name": "Check API Response3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1740, -1560],
      "id": "ac931e05-5c8e-4b83-aba4-b6eb97e373bd",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.143.2:3005/email/send-success",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Login\"].json.access_token }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n\"workflowName\": \"Skill Assessment Upsert Workflow\",\n\"error\": \"an error occured\"\n}",
        "options": {}
      },
      "name": "Send Success Notification API3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2060, -1760],
      "id": "b37dd203-7704-4a78-983c-5a17387b4cfc",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/error-logs/create",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "errors",
              "value": "={{ $json.errors }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Log Errors to API2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1260, -1140],
      "id": "cd76eb5a-92b5-4367-9b76-af7015d95a2b",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/error-logs/create",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "errors",
              "value": "={{ $json.errors }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Log Errors to API3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1300, 160],
      "id": "7065446b-f63b-42ba-8416-74f7dea3a7c9",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Per Employee Average Computation",
        "height": 653.1840467693687,
        "width": 1052.540929513469,
        "color": 7
      },
      "id": "5d78cdf5-08b6-4db7-989a-0e547e77f48e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-2080, -1580]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/notifications/error",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "=Error occurred during Skills Matrix update: {{ $json.body }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Send Error Notification API2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2040, 100],
      "id": "9801fafb-a16e-4a19-8566-bbfb17d97d76",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-nestjs-api.com/api/notifications/error",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Process and Validate Data\"].json.accessToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "=Error occurred during Skills Matrix update: {{ $json.body }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Send Error Notification API3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2060, -1380],
      "id": "634238da-5170-4295-bab0-9c9437457dac",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "searchMethod": "query",
        "queryString": "='{{ $('Assessment Trigger').item.json.id }}' in parents ",
        "filter": {},
        "options": {}
      },
      "id": "c14c4988-daff-4c6d-bc82-dbfe7ea6d3b0",
      "name": "Search Folder",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [300, -760],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "uA9Psb5vjLv1l7LZ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Helper function to convert strings to camelCase\nfunction toCamelCase(str) {\n  return str\n    .toLowerCase()\n    .replace(/[^a-zA-Z0-9]+(.)/g, (_, chr) => chr.toUpperCase());\n}\n\n// Configuration for essential fields\nconst essentialFields = {\n  email: 'Email Address',\n  timestamp: 'Timestamp',\n  resourceName: 'Name of Resource',\n  emailOfResource: 'Email of Resource',\n  nameOfRespondent: 'Name of Respondent',\n  capability: 'Capability',\n  careerLevel: 'Career Level of Resource'\n};\n\n// Extract the access token from the login response\nconst accessToken = $node['Login'].json.access_token;\nif (!accessToken) {\n  throw new Error('Failed to obtain access token');\n}\n\nconst prefixBU = $node['Search Folder'].json.name.split('_')[0];\n\n// Process the data from Google Sheets\nconst sheetData = items.map(item => item.json);\n\nconst processedData = sheetData.map(row => {\n  // Extract basic information dynamically\n  const basicInfo = {};\n  Object.entries(essentialFields).forEach(([key, header]) => {\n    basicInfo[key] = row[header] || ''; // Assign empty string if the field is missing\n  });\n\n  // Dynamically create the skills object\n  const skills = {};\n  Object.keys(row).forEach(key => {\n    // Exclude essential fields and row_number\n    if (!Object.values(essentialFields).includes(key) && key !== 'row_number' && !isNaN(parseInt(row[key]))) {\n      const camelCaseKey = toCamelCase(key);\n      skills[camelCaseKey] = parseInt(row[key]) || 0;\n    }\n  });\n\n  return {\n    ...basicInfo,\n    skills\n  };\n});\n\n// Validate the data\nconst validItems = [];\nconst errors = [];\n\nprocessedData.forEach((item, index) => {\n  const validationErrors = [];\n\n  // Check if email exists\n  if (!item.email) {\n    validationErrors.push('Missing Email Address');\n  }\n\n  // Check if name exists\n  if (!item.nameOfRespondent) {\n    validationErrors.push('Missing Name of Respondent');\n  }\n\n  // Check if capability exists\n  if (!item.capability) {\n    validationErrors.push('Missing Capability');\n  }\n\n  // Check skill levels dynamically\n  Object.entries(item.skills).forEach(([skillName, level]) => {\n    if (level < 0 || level > 6) {\n      validationErrors.push(`Invalid level for ${skillName}: must be between 0 and 6 (received: ${level})`);\n    }\n  });\n\n  if (validationErrors.length > 0) {\n    errors.push({\n      index,\n      name: item.nameOfRespondent,\n      errors: validationErrors\n    });\n  } else {\n    validItems.push(item);\n  }\n});\n\nconst assessmentType = validItems.length > 0 && validItems[0].resourceName === validItems[0].name ? \"self\" : \"manager\";\n\n// Return the results along with the access token\nreturn {\n  json: {\n    accessToken,\n    prefixBU,\n    assessmentType,\n    validItems,\n    errors,\n    summary: {\n      totalProcessed: processedData.length,\n      validCount: validItems.length,\n      errorCount: errors.length\n    }\n  }\n};\n"
      },
      "name": "Process and Validate Manager Assessment Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [940, -120],
      "id": "28ab3fbc-a5cd-43aa-b8b0-f0ac63b2b0d3"
    },
    {
      "parameters": {
        "jsCode": "// Helper function to convert strings to camelCase\nfunction toCamelCase(str) {\n  return str\n    .toLowerCase()\n    .replace(/[^a-zA-Z0-9]+(.)/g, (_, chr) => chr.toUpperCase());\n}\n\n// Extract the access token from the login response\nconst accessToken = $node['Login'].json.access_token;\nif (!accessToken) {\n  throw new Error('Failed to obtain access token');\n}\n\nconst prefixBU = $node['Search Folder'].json.name.split('_')[0];\n\n// Process the data from Google Sheets\nconst sheetData = items.map(item => item.json);\n\n// Initialize arrays for valid items and errors\nconst validItems = [];\nconst errors = [];\n\n// Process each row of data\nconst processedData = sheetData.map(row => {\n  const { \n    'Email Address': email,\n    'Timestamp': timestamp,\n    'Name of Resource': resourceName,\n    'Name of Respondent': nameOfRespondent,  // Changed from name to nameOfRespondent\n    'Capability': capability,\n    'Career Level of Resource': careerLevel \n  } = row;\n\n  // Dynamically create the skills object\n  const skills = {};\n  Object.keys(row).forEach(key => {\n    if (\n      key !== 'row_number' &&\n      key !== 'Email Address' &&\n      key !== 'Timestamp' &&\n      key !== 'Name of Resource' &&\n      key !== 'Name of Respondent' &&\n      key !== 'Capability' &&\n      key !== 'Career Level of Resource' &&\n      !isNaN(parseInt(row[key])) // Ensure that the value is numeric\n    ) {\n      const camelCaseKey = toCamelCase(key);\n      skills[camelCaseKey] = parseInt(row[key]) || 0;\n    }\n  });\n\n  return {\n    email,\n    timestamp,\n    resourceName,\n    nameOfRespondent,  // Updated here as well\n    capability,\n    careerLevel: careerLevel || '',\n    skills\n  };\n});\n\n// Validate the data\nprocessedData.forEach((item, index) => {\n  const validationErrors = [];\n\n  // Check if email exists\n  if (!item.email) {\n    validationErrors.push('Missing Email Address');\n  }\n\n  // Check if name exists\n  if (!item.nameOfRespondent) {  // Updated here\n    validationErrors.push('Missing Name of Respondent');\n  }\n\n  // Check if capability exists\n  if (!item.capability) {\n    validationErrors.push('Missing Capability');\n  }\n\n  // Check skill levels dynamically\n  Object.entries(item.skills).forEach(([skillName, level]) => {\n    if (level < 0 || level > 6) {\n      validationErrors.push(`Invalid level for ${skillName}: must be between 0 and 6 (received: ${level})`);\n    }\n  });\n\n  if (validationErrors.length > 0) {\n    errors.push({\n      index,\n      name: item.nameOfRespondent,  // Updated here\n      errors: validationErrors\n    });\n  } else {\n    validItems.push(item);\n  }\n});\n\n// Determine assessment type based on the first valid item\nconst assessmentType = validItems.length > 0 && validItems[0].resourceName === validItems[0].nameOfRespondent ? \"self\" : \"manager\";  // Updated here\n\n// Return the results along with the access token\nreturn {\n  json: {\n    accessToken,\n    prefixBU,\n    assessmentType,\n    validItems,\n    errors,\n    summary: {\n      totalProcessed: processedData.length,\n      validCount: validItems.length,\n      errorCount: errors.length\n    }\n  }\n};\n"
      },
      "name": "Process and Validate Self Assessment Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [980, -760],
      "id": "c4900ed5-7968-43df-b797-230c8652866c",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Helper function to convert strings to camelCase\nfunction toCamelCase(str) {\n  return str\n    .toLowerCase()\n    .replace(/[^a-zA-Z0-9]+(.)/g, (_, chr) => chr.toUpperCase());\n}\n\n// Extract the access token from the login response\nconst accessToken = $node['Login'].json.access_token;\nif (!accessToken) {\n  throw new Error('Failed to obtain access token');\n}\n\nconst prefixBU = $node['Search Folder'].json.name.split('_')[0];\n\n// Process the data from Google Sheets\nconst sheetData = items.map(item => item.json);\n\n// Initialize arrays for valid items and errors\nconst validItems = [];\nconst errors = [];\n\n// Process each row of data\nconst processedData = sheetData.map(row => {\n  const { \n    'Career Level': careerLevel \n  } = row;\n\n  // Dynamically create the skills object\n  const skills = {};\n  Object.keys(row).forEach(key => {\n    if (\n      key !== 'row_number' &&\n      key !== 'col_1' &&\n      !isNaN(parseInt(row[key])) // Ensure that the value is numeric\n    ) {\n      const camelCaseKey = toCamelCase(key);\n      skills[camelCaseKey] = parseInt(row[key]) || 0;\n    }\n  });\n\n  return {\n    careerLevel: careerLevel || '',\n    skills\n  };\n});\n\n// Validate the data\nprocessedData.forEach((item, index) => {\n  const validationErrors = [];\n\n  // Check if careerLevel exists\n  if (!item.careerLevel) {\n    validationErrors.push('Missing Career Level');\n  }\n\n  // Check skill levels dynamically\n  Object.entries(item.skills).forEach(([skillName, level]) => {\n    if (level < 0 || level > 6) {\n      validationErrors.push(`Invalid level for ${skillName}: must be between 0 and 6 (received: ${level})`);\n    }\n  });\n\n  if (validationErrors.length > 0) {\n    errors.push({\n      index,\n      careerLevel: item.careerLevel,\n      errors: validationErrors\n    });\n  } else {\n    validItems.push(item);\n  }\n});\n\n// Determine assessment type as \"required\" for required skills\nconst assessmentType = \"required\";\n\n// Return the results along with the access token\nreturn {\n  json: {\n    accessToken,\n    prefixBU,\n    assessmentType,\n    validItems,\n    errors,\n    summary: {\n      totalProcessed: processedData.length,\n      validCount: validItems.length,\n      errorCount: errors.length\n    }\n  }\n};\n"
      },
      "name": "Process and Validate Required Skills Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [980, -1400],
      "id": "7aa368f3-35b6-41f7-a5a9-8b9bf9764a4d"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "event": "folderUpdated"
      },
      "id": "f19aeb8c-f09f-455e-9063-346367368942",
      "name": "Assessment Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [-140, -980],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "uA9Psb5vjLv1l7LZ",
          "name": "Google Drive account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Initial Workflow",
        "height": 2189.415613478509,
        "width": 2564.008202531837,
        "color": 3
      },
      "id": "534147d5-873a-4f15-9e9a-c6d866e0ebc7",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-240, -1800]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "authentication": "serviceAccount",
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1GFw8rXOn8lSizlc3wPM81mGijtCld8k7",
          "mode": "id"
        },
        "event": "folderUpdated"
      },
      "id": "c19270fc-dbf9-41af-afb9-b22b0ce29318",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [3220, -1080],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "888f2df9-8419-4775-8e93-39929e63c84d",
              "leftValue": "={{ $json.name.toLowerCase() }}",
              "rightValue": "manager",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "c630173a-6db6-4e61-aba9-4e7daf2bf04a",
              "leftValue": "={{ $json.name.toLowerCase() }}",
              "rightValue": "self",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "b1d8d4fa-07ac-462b-a700-a91666b57bc7",
      "name": "Check Assessment Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [4400, -1240]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "11586fad-38e4-4f9b-b45a-4c258bff6110",
              "leftValue": "={{ $json.mimeType }}",
              "rightValue": "application/vnd.google-apps.spreadsheet",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "5a94877e-8ae3-4298-bb06-fc84eac4a919",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [4120, -1080]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.143.2:3001/auth/login",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "user@example.com"
            },
            {
              "name": "password",
              "value": "password123"
            }
          ]
        },
        "options": {}
      },
      "name": "Login",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [100, -980],
      "id": "d6cbda86-ac20-4c8c-a51a-ab621b25d8e1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.143.2:3001/auth/login",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "user@example.com"
            },
            {
              "name": "password",
              "value": "password123"
            }
          ]
        },
        "options": {}
      },
      "name": "Login to API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [3460, -1080],
      "id": "45858016-b430-4e82-9a4e-87dd2fc0272a"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "resource": "fileFolder",
        "searchMethod": "query",
        "queryString": "='{{ $('Google Drive Trigger').item.json.id }}' in parents",
        "filter": {},
        "options": {
          "fields": ["mimeType", "name", "id", "version"]
        }
      },
      "id": "25cda076-e03b-488e-be4c-1bc4b3d5842d",
      "name": "Find Sheets",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [3860, -1080],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $node['Google Drive Trigger'].json.parents[0] }}?fields=id,createdTime,modifiedTime,name",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "options": {}
      },
      "id": "83f6d08c-da9b-4730-9cb4-2ad8400dcff7",
      "name": "GET Parent Folder",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [3660, -1080],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1a6NCn008077R0jbqtc3mkhcB1U4JexnVd2pUh--Ezhw/edit#gid=0"
        },
        "options": {}
      },
      "id": "435ac856-7136-4ec6-ba23-d9bfb9f0eb37",
      "name": "GET Sheets Data",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [4580, -1460],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Helper function to convert strings to camelCase\nfunction toCamelCase(str) {\n  return str\n    .toLowerCase()\n    .replace(/[^a-zA-Z0-9]+(.)/g, (_, chr) => chr.toUpperCase());\n}\n\n// Extract access token from login response\nconst accessToken = $node['Login to API'].json.access_token;\nif (!accessToken) {\n  throw new Error('Failed to obtain access token');\n}\n\nconst prefixBU = $node['GET Parent Folder'].json.name.split('_')[0];\nconst assessmentType = $node['Find Sheets'].json.name.toLowerCase().split('_')[1];\n\n// Process the data from Google Sheets\nconst sheetData = items.map(item => item.json);\n\n// Determine required fields dynamically from the first row\nconst firstRow = sheetData[0];\nconst requiredFields = Object.keys(firstRow).filter(key => isNaN(firstRow[key]) || typeof firstRow[key] === 'string');\n\n// Process and validate data\nconst processedData = sheetData.map(row => {\n  // Separate non-numeric fields for basic info\n  const basicInfo = Object.fromEntries(\n    Object.entries(row).filter(([_, value]) => isNaN(value) || typeof value === 'string')\n  );\n\n  // Separate numeric fields for skills, excluding `row_number`\n  const skills = Object.fromEntries(\n    Object.entries(row)\n      .filter(([key, value]) => !isNaN(value) && key !== 'row_number')\n      .map(([key, value]) => [toCamelCase(key), parseInt(value) || 0]) // Use toCamelCase here\n  );\n\n  // Apply camel casing to basicInfo keys\n  const camelCasedBasicInfo = Object.fromEntries(\n    Object.entries(basicInfo).map(([key, value]) => [toCamelCase(key), value])\n  );\n\n  return { ...camelCasedBasicInfo, skills };\n});\n\n// Validate the data\nconst validItems = [];\nconst errors = [];\n\nprocessedData.forEach((item, index) => {\n  const validationErrors = [];\n\n  // Check if required fields are present in basicInfo\n  requiredFields.forEach(field => {\n    const camelCasedField = toCamelCase(field); // Ensure the field is in camel case\n    if (!item[camelCasedField]) {\n      validationErrors.push(`Missing ${field}`);\n    }\n  });\n\n  // Additional validation for emailOfResource if assessment type is 'Manager'\n  if (assessmentType === 'manager' && !item['emailOfResource']) {\n    validationErrors.push('Missing Email of Resource');\n  }\n\n  // Check skill levels dynamically\n  Object.entries(item.skills).forEach(([skillName, level]) => {\n    if (level < 0 || level > 6) {\n      validationErrors.push(`Invalid level for ${skillName}: must be between 0 and 6 (received: ${level})`);\n    }\n  });\n\n  if (validationErrors.length > 0) {\n    errors.push({\n      index,\n      name: item['nameOfRespondent'] || 'Unknown',\n      errors: validationErrors\n    });\n  } else {\n    validItems.push(item);\n  }\n});\n\n// Return the results along with the access token\nreturn {\n  json: {\n    prefixBU,\n    assessmentType,\n    validItems,\n    errors,\n    summary: {\n      totalProcessed: processedData.length,\n      validCount: validItems.length,\n      errorCount: errors.length\n    }\n  }\n};\n"
      },
      "id": "e394ac3b-e185-43df-bfbc-d5a40193ff8d",
      "name": "Process and Validate Data1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [4800, -1460]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "dc254c3b-de36-428f-9e97-fb65e352a836",
              "leftValue": "={{ $json.errors }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "94910047-0ec5-4cbf-92d5-c549854b23f2",
      "name": "Check for Validation Errors4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [5020, -1460]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://172.22.156.50:3002/api/skills-matrix/bulk-update-assessments",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ $node['Login to API'].json.access_token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=assessmentType",
              "value": "={{ $node['Process and Validate Data1'].json.assessmentType }}"
            },
            {
              "name": "data",
              "value": "={{ $node['Process and Validate Data1'].json.validItems }}"
            },
            {
              "name": "prefix",
              "value": "={{ $node['Process and Validate Data1'].json.prefixBU }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Skills Matrix API4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [5240, -1620],
      "id": "bd156873-b78f-4282-a02c-69aeb47ae946"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "888f2df9-8419-4775-8e93-39929e63c84d",
              "leftValue": "={{ $json.name.toLowerCase() }}",
              "rightValue": "manager",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "c630173a-6db6-4e61-aba9-4e7daf2bf04a",
              "leftValue": "={{ $json.name.toLowerCase() }}",
              "rightValue": "self",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "58a530e9-897d-46a6-abe5-ccfb68442aad",
      "name": "Check Assessment Type1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [4880, 120]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "11586fad-38e4-4f9b-b45a-4c258bff6110",
              "leftValue": "={{ $json.mimeType }}",
              "rightValue": "application/vnd.google-apps.spreadsheet",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "4c7de73c-5bc4-49e1-aca2-e2913e667f4d",
      "name": "Check File Type1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [4600, 280]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.143.2:3001/auth/login",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "user@example.com"
            },
            {
              "name": "password",
              "value": "password123"
            }
          ]
        },
        "options": {}
      },
      "name": "Login to API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [3720, 280],
      "id": "86ae1a32-d913-4e9b-a78d-cf91b3e03277"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "resource": "fileFolder",
        "searchMethod": "query",
        "queryString": "='{{ $('GET Watched Folder').item.json.id }}' in parents",
        "filter": {},
        "options": {
          "fields": ["mimeType", "name", "id", "version"]
        }
      },
      "id": "cf457582-1bec-4a99-b5bd-6a811524b667",
      "name": "Find Sheets1",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [4340, 280],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1a6NCn008077R0jbqtc3mkhcB1U4JexnVd2pUh--Ezhw/edit#gid=0"
        },
        "options": {}
      },
      "id": "395542e6-dda5-4740-ab3f-6519abfb44c3",
      "name": "GET Sheets Data1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [5060, -100],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Helper function to convert strings to camelCase\nfunction toCamelCase(str) {\n  return str\n    .toLowerCase()\n    .replace(/[^a-zA-Z0-9]+(.)/g, (_, chr) => chr.toUpperCase());\n}\n\n// Extract access token from login response\nconst accessToken = $node['Login to API1'].json.access_token;\nif (!accessToken) {\n  throw new Error('Failed to obtain access token');\n}\n\nconst prefixBU = $node['GET Parent'].json.name.split('_')[0];\nconst assessmentType = $node['Find Sheets1'].json.name.toLowerCase().split('_')[1];\n\n// Process the data from Google Sheets\nconst sheetData = items.map(item => item.json);\n\n// Determine required fields dynamically from the first row\nconst firstRow = sheetData[0];\nconst requiredFields = Object.keys(firstRow).filter(key => isNaN(firstRow[key]) || typeof firstRow[key] === 'string');\n\n// Process and validate data\nconst processedData = sheetData.map(row => {\n  // Separate non-numeric fields for basic info\n  const basicInfo = Object.fromEntries(\n    Object.entries(row).filter(([_, value]) => isNaN(value) || typeof value === 'string')\n  );\n\n  // Separate numeric fields for skills, excluding `row_number`\n  const skills = Object.fromEntries(\n    Object.entries(row)\n      .filter(([key, value]) => !isNaN(value) && key !== 'row_number')\n      .map(([key, value]) => [toCamelCase(key), parseInt(value) || 0]) // Use toCamelCase here\n  );\n\n  // Apply camel casing to basicInfo keys\n  const camelCasedBasicInfo = Object.fromEntries(\n    Object.entries(basicInfo).map(([key, value]) => [toCamelCase(key), value])\n  );\n\n  return { ...camelCasedBasicInfo, skills };\n});\n\n// Validate the data\nconst validItems = [];\nconst errors = [];\n\nprocessedData.forEach((item, index) => {\n  const validationErrors = [];\n\n  // Check if required fields are present in basicInfo\n  requiredFields.forEach(field => {\n    const camelCasedField = toCamelCase(field); // Ensure the field is in camel case\n    if (!item[camelCasedField]) {\n      validationErrors.push(`Missing ${field}`);\n    }\n  });\n\n  // Additional validation for emailOfResource if assessment type is 'Manager'\n  if (assessmentType === 'manager' && !item['emailOfResource']) {\n    validationErrors.push('Missing Email of Resource');\n  }\n\n  // Check skill levels dynamically\n  Object.entries(item.skills).forEach(([skillName, level]) => {\n    if (level < 0 || level > 6) {\n      validationErrors.push(`Invalid level for ${skillName}: must be between 0 and 6 (received: ${level})`);\n    }\n  });\n\n  if (validationErrors.length > 0) {\n    errors.push({\n      index,\n      name: item['nameOfRespondent'] || 'Unknown',\n      errors: validationErrors\n    });\n  } else {\n    validItems.push(item);\n  }\n});\n\n// Return the results along with the access token\nreturn {\n  json: {\n    prefixBU,\n    assessmentType,\n    validItems,\n    errors,\n    summary: {\n      totalProcessed: processedData.length,\n      validCount: validItems.length,\n      errorCount: errors.length\n    }\n  }\n};\n"
      },
      "id": "7c5de254-6735-48e1-8c12-078a6693b9f0",
      "name": "Process and Validate Data2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [5280, -100]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "dc254c3b-de36-428f-9e97-fb65e352a836",
              "leftValue": "={{ $json.errors }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "e88ee8a9-aa14-40a4-b15f-55078d4471a4",
      "name": "Check for Validation Errors5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [5500, -100]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://172.22.156.50:3002/api/skills-matrix/bulk-update-assessments",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ $node['Login to API1'].json.access_token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "assessmentType",
              "value": "={{ $node['Process and Validate Data2'].json.assessmentType }}"
            },
            {
              "name": "data",
              "value": "={{ $node['Process and Validate Data2'].json.validItems }}"
            },
            {
              "name": "prefix",
              "value": "={{ $node['Process and Validate Data2'].json.prefixBU }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Skills Matrix API5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [5720, -260],
      "id": "e46c8c01-39b0-45eb-8c24-fb942b0d9bf5"
    },
    {
      "parameters": {
        "content": "## Template\n**Google Drive Trigger on BU** \n",
        "height": 770.2289671783183,
        "width": 2202.496358445469,
        "color": 6
      },
      "id": "4d9ec7d9-dc0c-4423-9f43-87869da0c240",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [3360, -1640]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "authentication": "serviceAccount",
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1F_TlRIQu9iQoQA48_ncQQWpMoOOyv0xE",
          "mode": "id"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "40a52204-a29f-4c12-b2ac-b3981f669e4d",
      "name": "Self Assessment Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [3260, 140],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "authentication": "serviceAccount",
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1yYyQ91bFJTY-VGxJupsIZBE0ME0jXHas",
          "mode": "id"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "cd4ec5ba-5b05-4a2a-a381-6528e2f6d14c",
      "name": "Manager Assessments Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [3260, 400],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $node['Return Data'].json.parents[0] }}?fields=id,createdTime,modifiedTime,name,parents",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "options": {}
      },
      "id": "28904280-6e11-4e4e-b160-a258fd597168",
      "name": "GET Watched Folder",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [3940, 280],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Return all items from the previous node as they are\nreturn $input.all(); // Directly return all items from the previous node"
      },
      "id": "27ee6256-2150-4b96-8fe4-8b72709d07ef",
      "name": "Return Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [3540, 280]
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $node['GET Watched Folder'].json.parents[0] }}?fields=id,name",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "options": {}
      },
      "id": "72477c81-6ff8-4b82-956f-fe3f4eabd04e",
      "name": "GET Parent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [4140, 280],
      "credentials": {
        "googleApi": {
          "id": "w27aj7tkRulsWxQB",
          "name": "Stratpoint Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Template\n**Google Drive Trigger on Manager and Self Folders** ",
        "height": 1010.4655133907468,
        "width": 2605.357209118016,
        "color": 5
      },
      "id": "f02a6bf8-8924-4e67-85d3-585af11c63f4",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [3440, -320]
    }
  ],
  "pinData": {},
  "connections": {
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Process and Validate Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process and Validate Data": {
      "main": [
        [
          {
            "node": "Update Skills Matrix API",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check for Validation Errors",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Skills Matrix API": {
      "main": [
        [
          {
            "node": "Check API Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API Response": {
      "main": [
        [
          {
            "node": "Send Success Notification API",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Error Notification API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Validation Errors": {
      "main": [
        [
          {
            "node": "Log Errors to API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Self Assessments": {
      "main": [
        [
          {
            "node": "Process and Validate Self Assessment Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Manager Assessments": {
      "main": [
        [
          {
            "node": "Process and Validate Manager Assessment Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Validation Errors2": {
      "main": [
        [
          {
            "node": "Update Skills Matrix API2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Errors to API3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Validation Errors1": {
      "main": [
        [
          {
            "node": "Update Skills Matrix API1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Errors to API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Skills Matrix API1": {
      "main": [
        [
          {
            "node": "Check API Response2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Skills Matrix API2": {
      "main": [
        [
          {
            "node": "Check API Response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Self Skills Data API": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Self Skills Data API1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check API Response2": {
      "main": [
        [
          {
            "node": "Send Success Notification API1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Error Notification API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API Response1": {
      "main": [
        [
          {
            "node": "Send Success Notification API2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Error Notification API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Transform Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform Data": {
      "main": [
        [
          {
            "node": "Compute Average Per Employee",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute Average Per Employee": {
      "main": [
        [
          {
            "node": "Update Average Skills API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Process and Validate Required Skills Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Validation Errors3": {
      "main": [
        [
          {
            "node": "Update Skills Matrix API3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Errors to API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Skills Matrix API3": {
      "main": [
        [
          {
            "node": "Check API Response3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API Response3": {
      "main": [
        [
          {
            "node": "Send Success Notification API3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Error Notification API3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Folder": {
      "main": [
        [
          {
            "node": "Read Manager Assessments",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read Self Assessments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process and Validate Manager Assessment Data": {
      "main": [
        [
          {
            "node": "Check for Validation Errors2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process and Validate Self Assessment Data": {
      "main": [
        [
          {
            "node": "Check for Validation Errors1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process and Validate Required Skills Data": {
      "main": [
        [
          {
            "node": "Check for Validation Errors3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assessment Trigger": {
      "main": [
        [
          {
            "node": "Login",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Assessment Type": {
      "main": [
        [
          {
            "node": "GET Sheets Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Check Assessment Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Login": {
      "main": [
        [
          {
            "node": "Search Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Login to API": {
      "main": [
        [
          {
            "node": "GET Parent Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Sheets": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Parent Folder": {
      "main": [
        [
          {
            "node": "Find Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Sheets Data": {
      "main": [
        [
          {
            "node": "Process and Validate Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process and Validate Data1": {
      "main": [
        [
          {
            "node": "Check for Validation Errors4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Validation Errors4": {
      "main": [
        [
          {
            "node": "Update Skills Matrix API4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Login to API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Assessment Type1": {
      "main": [
        [
          {
            "node": "GET Sheets Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type1": {
      "main": [
        [
          {
            "node": "Check Assessment Type1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Login to API1": {
      "main": [
        [
          {
            "node": "GET Watched Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Sheets1": {
      "main": [
        [
          {
            "node": "Check File Type1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Sheets Data1": {
      "main": [
        [
          {
            "node": "Process and Validate Data2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process and Validate Data2": {
      "main": [
        [
          {
            "node": "Check for Validation Errors5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Validation Errors5": {
      "main": [
        [
          {
            "node": "Update Skills Matrix API5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Watched Folder": {
      "main": [
        [
          {
            "node": "GET Parent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Data": {
      "main": [
        [
          {
            "node": "Login to API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Parent": {
      "main": [
        [
          {
            "node": "Find Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manager Assessments Drive Trigger": {
      "main": [
        [
          {
            "node": "Return Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Self Assessment Drive Trigger": {
      "main": [
        [
          {
            "node": "Return Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "eb934ace-bc48-435e-bb53-365572e08f96",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a31f8c9eb797a311bc289ce7bafeb2442b7772146dd18635dc019f72cb5829a0"
  },
  "id": "ywSj2r7j8rqYit96",
  "tags": []
}
